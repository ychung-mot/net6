BEGIN TRANSACTION 

DECLARE @utcdate DATETIME = (SELECT getutcdate() AS utcdate)
DECLARE @app_guid UNIQUEIDENTIFIER = (SELECT CASE WHEN SUSER_SID() IS NOT NULL THEN SUSER_SID() ELSE (SELECT CONVERT(uniqueidentifier,STUFF(STUFF(STUFF(STUFF('B00D00A0AC0A0D0C00DD00F0D0C00000',9,0,'-'),14,0,'-'),19,0,'-'),24,0,'-'))) END AS  app_guid)
DECLARE @app_user VARCHAR(30) = (SELECT CASE WHEN SUBSTRING(SUSER_NAME(),CHARINDEX('\',SUSER_NAME())+1,LEN(SUSER_NAME())) IS NOT NULL THEN SUBSTRING(SUSER_NAME(),CHARINDEX('\',SUSER_NAME())+1,LEN(SUSER_NAME())) ELSE CURRENT_USER END AS app_user)
DECLARE @app_user_dir VARCHAR(12) = (SELECT CASE WHEN LEN(SUBSTRING(SUSER_NAME(),0,CHARINDEX('\',SUSER_NAME(),0)))>1 THEN SUBSTRING(SUSER_NAME(),0,CHARINDEX('\',SUSER_NAME(),0)) ELSE 'WIN AUTH' END AS app_user_dir)

INSERT INTO CRT_FIN_TARGET 
	(PROJECT_ID
	,DESCRIPTION
	,AMOUNT
	,FISCAL_YEAR_LKUP_ID
	,ELEMENT_ID
	,PHASE_LKUP_ID
	,FUNDING_TYPE_LKUP_ID
	,APP_CREATE_USERID
	,APP_CREATE_TIMESTAMP
	,APP_CREATE_USER_GUID
	,APP_LAST_UPDATE_USERID
	,APP_LAST_UPDATE_TIMESTAMP
	,APP_LAST_UPDATE_USER_GUID)
SELECT mpj.CRT_ID AS PROJECT_ID
	 , tff.[Sub Project Description]
	 , (tff.Amount * 1000) AS AMOUNT
	 , CASE
		WHEN mfy.CRT_ID IS NULL 
		THEN (SELECT CODE_LOOKUP_ID FROM CRT_CODE_LOOKUP WHERE CODE_SET = 'FISCAL_YEAR' AND CODE_NAME = 'TBD')	--NOTE: DEFAULTING TO TBD
		ELSE mfy.CRT_ID
		END AS FISCAL_YEAR_ID
	  , CASE 
		WHEN me.CRT_ID IS NULL 
		THEN (SELECT ELEMENT_ID FROM CRT_ELEMENT WHERE CODE = 'Not Applicable') 	--NOTE: DEFAULTING TO UNK
		ELSE me.CRT_ID 
		END AS ELEMENT_ID
	, CASE	
		WHEN mp.CRT_ID IS NULL
		THEN (SELECT CODE_LOOKUP_ID FROM CRT_CODE_LOOKUP WHERE CODE_SET = 'PHASE' AND CODE_NAME = 'Unknown') 	--NOTE: DEFAULTING TO UNK
		ELSE mp.CRT_ID
		END AS PHASE_ID
	 , CASE	
	    WHEN mft.CRT_ID IS NULL
		THEN (SELECT CODE_LOOKUP_ID FROM CRT_CODE_LOOKUP WHERE CODE_SET = 'FUNDING_TYPE' AND CODE_NAME = 'Allocation') 	--NOTE: DEFAULTING TO Allocation
		ELSE mft.CRT_ID
		END AS FUNDING_TYPE_ID
	 , @app_user
	 , @utcdate
	 , @app_guid
	 , @app_user
	 , @utcdate
	 , @app_guid
FROM tblFinancialForecast tff
LEFT JOIN MAP_PROJECT mpj
ON mpj.LEGACY_ID = tff.Project
LEFT JOIN MAP_FISCAL_YEAR mfy
ON mfy.LEGACY_ID = tff.[Fiscal Year]
LEFT JOIN MAP_ELEMENT me
ON me.LEGACY_ID = tff.Element
LEFT JOIN MAP_PHASE mp
ON mp.LEGACY_ID = tff.[Forecast Phase]
LEFT JOIN MAP_FUNDING_TYPE mft
ON mft.LEGACY_ID = tff.[Forecast Type]

COMMIT
GO

DECLARE @legacyCnt int, @crtCnt int, @mappedCnt int;

SELECT @legacyCnt = COUNT(*) FROM tblFinancialForecast
SELECT @crtCnt = COUNT(*) FROM CRT_FIN_TARGET

PRINT CHAR(10) + 'Found ' + CONVERT(varchar, @legacyCnt) + ' Legacy Fin Forecats and ' + CONVERT(varchar, @crtCnt) + ' CRT Fin Target Items'

